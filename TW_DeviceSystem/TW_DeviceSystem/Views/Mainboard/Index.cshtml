
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/common.css" rel="stylesheet" />
    <link href="~/Scripts/layui/css/layui.css" rel="stylesheet" />
    <link href="~/Content/style.css" rel="stylesheet" />
    <script src="~/Scripts/echarts/echarts.js"></script>
    <script src="~/Scripts/jquery-1.8.0.js"></script>
    <style type="text/css">
        #ADCtable tr td {
            border: 1px solid gray;
        }
    </style>
</head>
<body>
    <input type="hidden" id="TerminalId" value="@ViewBag.TerminalId" />
    <input type="hidden" id="ElectricId" value="@ViewBag.ElectricId" />
    <input type="hidden" id="LineId" value="@ViewBag.LineId" />

    <blockquote class="layui-elem-quote layui-text" id="FreeServicingTitle"></blockquote>

    <div class="jd_detailsColumns">
        <div class="product_Container">
            <img src="~/Images/earthbox/jdx.jpg" />
        </div>
        <img src="~/Images/earthbox/redelectric.png" style="width:80px;height:80px;" />
        <span style="font-size:20px;font-weight:bold">供电电源</span>
        <table id="ADCtable" cellpadding="1" cellspacing="1" lay-filter="parse-table-version">
            <thead>
                <tr id="adcName"></tr>
            </thead>
            <tbody>
                <tr id="adcData"></tr>
            </tbody>
        </table>
    </div>
    <div class="tabbar_Container">
        <div class="layui-tab layui-tab-brief" lay-filter="demo">
            <ul class="layui-tab-title">
                <li class="layui-this">历史数据</li>
                <li>数据图表</li>
                <li>设备状态</li>
            </ul>
            <div class="layui-tab-content">
                <!--1-->
                <div class="layui-tab-item layui-show">
                    <div class="layui-inline">
                        <label class="layui-form-label">开始时间：</label>
                        <div class="layui-input-inline">
                            <input type="tel" id="historystartTime" placeholder="请选择开始时间" name="phone" lay-verify="required|phone" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">结束时间：</label>
                        <div class="layui-input-inline">
                            <input type="tel" id="hitoryendTime" placeholder="请选择结束时间" name="phone" lay-verify="required|phone" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline" style="margin-left: 10px;">
                        <button class="layui-btn layui-btn-normal" data-type="reloadhistory" id="btnHitorySearch">查询</button>
                    </div>
                    <table class="layui-hide" id="historydata"></table>
                </div>
                <!--2-->
                <div class="layui-tab-item">
                    <div class="layui-inline">
                        <label class="layui-form-label">开始时间：</label>
                        <div class="layui-input-inline">
                            <input type="tel" id="chartStartTime" placeholder="请选择开始时间" name="phone" lay-verify="required|phone" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">结束时间：</label>
                        <div class="layui-input-inline">
                            <input type="tel" id="chartEndTime" placeholder="请选择结束时间" name="phone" lay-verify="required|phone" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline" style="margin-left: 10px;">
                        <button class="layui-btn layui-btn-normal" id="chartBtnSearch">查询</button>
                    </div>
                    <div class="chart_Container" id="dataChart"></div>
                </div>
                <!--3-->
                <div class="layui-tab-item">
                    <fieldset class="layui-elem-field layui-field-title" style="margin-top: 20px;">
                        <legend>设备通讯状态曲线</legend>
                    </fieldset>
                    <div class="layui-inline">
                        <label class="layui-form-label">开始时间:</label>
                        <div class="layui-input-inline">
                            <input type="tel" id="netStartTime" placeholder="请选择开始时间" name="phone" lay-verify="required|phone" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">结束时间:</label>
                        <div class="layui-input-inline">
                            <input type="tel" id="netEndTime" placeholder="请选择结束时间" name="phone" lay-verify="required|phone" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-inline" style="margin-left: 10px;">
                        <button class="layui-btn layui-btn-normal" id="btnNetWork">查询</button>
                    </div>
                    <div class="legendRow">
                        <div class="legend green"></div>
                        <p class="legendTitle">校验通过</p>
                        <div class="legend red"></div>
                        <p class="legendTitle">校验不通过</p>
                        <div class="legend blue"></div>
                        <p class="legendTitle">没回复模块正常</p>
                        <div class="legend yellow"></div>
                        <p class="legendTitle">网络无连接</p>
                        <div class="legend Violet"></div>
                        <p class="legendTitle">网络已连接</p>
                    </div>
                    <div class="form_Area">
                        <div class="partial_ChartArea" style="width:calc(100% - 10px)" id="networkTrend"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--实时分析网络状态-->
    <div class="netWordStatePanelIcon shrink" id="networkBtn"></div>
    <div class="netWordStatePanel" id="netWordState">
    </div>

    <script src="~/Scripts/layui/layui.js"></script>
    <script src="~/Scripts/Views/Mainboard/dataChart.js"></script>
    @*通讯状态曲线*@
    <script src="~/Scripts/Views/NetWord/networkTrend.js"></script>
    @*滚动条插件*@
    <script src="~/Scripts/scroll/jquery.nicescroll.js"></script>
    <script type="text/html" id="handle">
        @*箱柜门打开可查看照片/其他变处理*@
        <a class="layui-btn layui-btn-xs layui-btn-normal" lay-event="showPicture">查看处理照片</a>
        {{#  if(d.AlarmCode === 257 && d.Status===1){ }}
        <a class="layui-btn layui-btn-primary layui-btn-xs" lay-event="detail">查看照片</a>
        <a class="layui-btn layui-btn-xs" lay-event="edit">处理</a>
        {{#  } else if(d.Status===2 && d.AlarmCode===257) { }}
        <a class="layui-btn layui-btn-primary layui-btn-xs" lay-event="detail">查看照片</a>
        <a class="layui-btn layui-btn-xs" lay-event="edit">处理</a>
        {{#  } else if(d.Status===3 && d.AlarmCode===257) { }}
        <a class="layui-btn layui-btn-primary layui-btn-xs" lay-event="detail">查看照片</a>
        {{#  } else if(d.Status===3) { }}

        {{#  } else { }}
        <a class="layui-btn layui-btn-xs" lay-event="edit">处理</a>
        {{#  } }}
    </script>
    <script type="text/javascript">
        var oldNetData = null;

        function GetBestNewNetWork() {
            var TerminalId = $("#TerminalId").val();
            var ElectricId = $("#ElectricId").val();
            var LineId = $("#LineId").val();
            var url = "/Partial/GetBestNewNetWork";
            $.ajax({
                url: url,
                data: { TerminalId: TerminalId, ElectricId: ElectricId, LineId: LineId },
                type: 'post',
                async: true,
                dataType: 'json',
                success: function (data, jqxhr, txtStatus) {
                    if (JSON.stringify(data) != JSON.stringify(oldNetData)) {
                        if ($("#netWordState")[0].children.length == 20) {
                            $("#netWordState")[0].children[0].remove();
                        }
                        var time = dateFormat(data.CreateTime);
                        var msg = "";
                        var status = data.Status;
                        if (status == 1) {
                            msg = "校验通过";
                        } else if (status == 2) {
                            msg = "校验不通过";
                        } else if (status == 3) {
                            msg = "没回复模块正常";
                        } else if (status == 4) {
                            msg = "网络无连接";
                        } else {
                            msg = "网络已连接";
                        }
                        var html = "<p>" + time + "&nbsp;" + msg + "</p>";
                        $("#netWordState").append(html);
                        var scrollDom = document.getElementById('netWordState');
                        scrollDom.scrollTop = scrollDom.scrollHeight
                        oldNetData = data;
                    }

                }, error: function (xhr, txtStatus) {
                    console.log(txtStatus);
                }
            })
        }

        /*面板伸缩*/
        var isAnimate = true;
        $("#networkBtn").click(function () {
            if (isAnimate) {
                $("#networkBtn").removeClass();
                $("#networkBtn").addClass("netWordStatePanelIcon collect");
                $("#networkBtn").animate({ right: "250px" })
                $("#netWordState").animate({ right: "0px" });
                isAnimate = false;
            } else {
                $("#networkBtn").removeClass();
                $("#networkBtn").addClass("netWordStatePanelIcon shrink");
                $("#networkBtn").animate({ right: "0px" })
                $("#netWordState").animate({ right: "-250px" });
                isAnimate = true;
            }

        })

        $('#netWordState').niceScroll({
            cursorcolor: "#4A4E51",//#CC0071 光标颜色
            cursoropacitymax: 1, //改变不透明度非常光标处于活动状态（scrollabar“可见”状态），范围从1到0
            touchbehavior: false, //使光标拖动滚动像在台式电脑触摸设备
            cursorwidth: "5px", //像素光标的宽度
            cursorborder: "0", // 游标边框css定义
            cursorborderradius: "5px",//以像素为光标边界半径
            autohidemode: false //是否隐藏滚动条
        });

        layui.use(['element', 'laydate', 'table'], function () {
            var historyTable = layui.table;
            historyTable.render({
                elem: '#historydata',
                url: '/Mainboard/GetHistoryData',
                cellMinWidth: 80,
                even: 'true',
                height: 400,
                id: 'reloadhistory',
                page: true,
                cols: [
                    [
                        {
                            field: 'Time',
                            title: '时间',
                            templet: function (row) { return dateFormat(row.Time); }
                        }
                        ,
                        {
                            field: 'ADC',
                            title: 'ADC'
                        },
                        {
                            field: 'TerminalId',
                            title: '终端Id'
                        },
                        {
                            field: 'deviceId',
                            title: '设备Id'
                        },
                        {
                            field: 'hardversion',
                            title: '硬件版本号'
                        },
                        {
                            field: 'softversion',
                            title: '软件版本号'
                        },
                        {
                            field: 'CreateTime',
                            title: '录入时间',
                            templet: function (row) { return dateFormat(row.CreateTime); }
                        }
                    ]
                ], where: {
                    TerminalId: document.getElementById("TerminalId").value,
                    ElectricId: document.getElementById("ElectricId").value,
                    LineId: document.getElementById("LineId").value
                }
            });

            var $ = layui.$, active = {
                reloadhistory: function () {
                    var TerminalId = $("#TerminalId").val();
                    var ElectricId = $("#ElectricId").val();
                    var LineId = $("#LineId").val();
                    var historystartTime = $("#historystartTime").val();
                    var hitoryendTime = $("#hitoryendTime").val();
                    historyTable.reload('reloadhistory', {
                        page: { curr: 1 },
                        where: {
                            TerminalId: TerminalId,
                            ElectricId: ElectricId,
                            LineId: LineId,
                            startTime: historystartTime,
                            endTime: hitoryendTime
                        }
                    });
                },
            };

            $('#btnHitorySearch').on('click', function () {
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
            });

            var element = layui.element;
            element.on('tab(demo)', function (data) {
                var index = data.index;
                switch (index) {
                    case 0:
                        var type = "reloadhistory";
                        active[type] ? active[type].call(this) : '';
                        break;
                    case 1:
                        initDataChart();
                        break;
                    case 2:
                        historyNetWorkTrend(null, null);
                        break;
                    default:
                        break;
                }
            });

            var laydate = layui.laydate;
            //1
            laydate.render({
                elem: '#historystartTime',
                type: 'datetime'
            });
            laydate.render({
                elem: '#hitoryendTime',
                type: 'datetime'
            });
            laydate.render({
                elem: '#chartStartTime',
                type: 'datetime'
            });
            laydate.render({
                elem: '#chartEndTime',
                type: 'datetime'
            });
            laydate.render({
                elem: '#netStartTime',
                type: 'datetime'
            });
            laydate.render({
                elem: '#netEndTime',
                type: 'datetime'
            });
        });

        function initDataChart() {
            var TerminalId = $("#TerminalId").val();
            var ElectricId = $("#ElectricId").val();
            var LineId = $("#LineId").val();
            var startTime = $("#chartStartTime").val();
            var endTime = $("#chartEndTime").val();
            var url = "/Mainboard/GetChartData";
            $.ajax({
                url: url,
                type: 'post',
                data: { TerminalId: TerminalId, ElectricId: ElectricId, LineId: LineId, startTime: startTime, endTime: endTime },
                async: false,
                dataType: 'json',
                success: function (data, jqxhr, txtStatus) {
                    dataEchart(data);
                }, error: function (xhr, txtStatus) {
                    console.log(txtStatus);
                }
            });
        }

        $("#chartBtnSearch").on('click', function () {
            initDataChart();
        });

        function dateFormat(item) {
            if (item == null || item == "" || item == "undefined") {
                return "";
            } else {
                var time = new Date(parseInt(item.substr(6))).Format("yyyy-MM-dd hh:mm:ss");
                return time;
            }
        }

        Date.prototype.Format = function (fmt) {
            var o = {
                "M+": this.getMonth() + 1, //月份
                "d+": this.getDate(), //日
                "h+": this.getHours(), //小时
                "m+": this.getMinutes(), //分
                "s+": this.getSeconds() //秒
            };
            if (/(y+)/.test(fmt)) { //根据y的长度来截取年
                fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
            }
            for (var k in o) {
                if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
            }
            return fmt;
        }

        $(document).ready(function () {
            GetSingData();
            setInterval("GetBestNewNetWork()", 1000);
        });

        setInterval(GetSingData, 10000);

        function GetSingData() {
            var TerminalId = $("#TerminalId").val();
            var ElectricId = $("#ElectricId").val();
            var LineId = $("#LineId").val();
            var url = "/Mainboard/GetSingle";
            $.ajax({
                url: url,
                async: true,
                type: 'post',
                data: { TerminalId: TerminalId, ElectricId: ElectricId, LineId: LineId },
                dataType: 'json',
                success: function (data, jqxhr, txtStatus) {
                    var adcArray = data.ADC.split(',');
                    $("#adcName").html("");
                    $("#adcData").html("");
                    for (var i = 0; i < adcArray.length; i++) {
                        var htmlname = "<th lay-data='{field:" + i + ", width:80}'>" + "ADC" + (i + 1) + "</th>";
                        var htmldata = "<td>" + adcArray[i] + "</td>";
                        $("#adcName").append(htmlname);
                        $("#adcData").append(htmldata);
                    }
                    layui.use('table', function () {
                        var versiontable = layui.table;
                        versiontable.init('parse-table-version', { //转化静态表格
                        });
                    })

                    $("#FreeServicingTitle").html("数据接入时间:" + "<span style='color:red'>" + dateFormat(data.CreateTime) + "</span>");
                }, error: function (xhr, txtStatus) {
                    console.log(txtStatus);
                }
            })
        }

        /*历史查询*/
        $("#btnNetWork").on('click', function () {
            var startTime = $("#netStartTime").val();
            var endTime = $("#netEndTime").val();
            historyNetWorkTrend(startTime, endTime);
        });

        /*加载网络曲线*/
        function historyNetWorkTrend(startTime, endTime) {
            var TerminalId = $("#TerminalId").val();
            var ElectricId = $("#ElectricId").val();
            var LineId = $("#LineId").val();
            var url = "/Partial/GetNetWorkTrend"
            $.ajax({
                url: url,
                type: 'post',
                data: { TerminalId: TerminalId, ElectricId: ElectricId, LineId: LineId, startTime: startTime, endTime: endTime },
                async: true,
                dataType: 'json',
                success: function (data, jqxhr, txtStatus) {
                    resetnetworkChart(data);
                }, error: function (jaxhr, txtStatus) {
                    console.log(txtStatus);
                }
            })
        }
    </script>
</body>
</html>
