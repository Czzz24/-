
@{
    Layout = null;
}

@model EF.Application.From.Model.Alarm.AlarmNexus
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/common.css" rel="stylesheet" />
    <link href="~/Scripts/layui/css/layui.css" rel="stylesheet" />
    <link href="~/Content/style.css" rel="stylesheet" />
    <script src="~/Scripts/echarts/echarts.js"></script>
    <script src="~/Scripts/jquery-1.8.0.min.js"></script>
    <script src="~/Scripts/webuploader-0.1.5/webuploader.nolog.js"></script>
    <style type="text/css">
        input[type=file] {
            display: none;
        }

        .filePanel {
            margin-left: 20px;
            width: calc(100% - 20px);
            height: auto;
            background: #FFFFFF;
            border: 1px solid #DDDDDD;
            border-radius: 5px;
            float: left;
        }

            .filePanel span {
                color: #444;
                font-weight: bold;
                line-height: 40px;
                margin-left: 34px;
                float: left;
            }

        .fileRow {
            width: 100%;
            height: 40px;
            background: #FFFFFF;
            border-top: 1px solid #DDDDDD;
            border-bottom: 1px solid #DDDDDD;
            float: left;
        }

        .fileContent {
            width: 100%;
            height: 150px;
            overflow: auto;
        }

        .table {
            width: 100%;
        }

            .table td {
                text-indent: 0.5em;
            }

            .table thead tr td {
                height: 30px;
                font-size: 14px;
                color: #444444;
                border-right: 1px solid #DDDDDD;
                border-bottom: 1px solid #DDDDDD;
            }

            .table tbody tr td {
                height: 30px;
                font-size: 14px;
            }

            .table tbody {
                color: #444444;
            }

                .table tbody tr:hover {
                    cursor: pointer;
                    background: #EEEEEE;
                    color: #007465;
                }

        .trSelect {
            background: #EEEEEE;
            color: #007465;
        }

        .buttonUpload {
            width: 120px;
            height: 30px;
            background: white;
            float: left;
            border: 1px solid #DDDDDD;
            color: #444444;
            border-radius: 5px;
            padding: 0px;
            margin: 5px 0px 0px 10px;
        }

            .buttonUpload:hover {
                border: 1px solid #007465;
                cursor: pointer;
                color: #007465;
            }

        .buttonDel {
            width: 120px;
            height: 30px;
            background: white;
            float: left;
            border: 1px solid #DDDDDD;
            color: #444444;
            border-radius: 5px;
            padding: 0px;
            margin: 5px 0px 0px 10px;
        }

            .buttonDel:hover {
                border: 1px solid red;
                cursor: pointer;
                color: red;
            }
    </style>
</head>
<body>
    <blockquote class="layui-elem-quote layui-text">
        告警处理
    </blockquote>
    @Html.HiddenFor(model => model.TerminalId)
    @Html.HiddenFor(model => model.ElectricId)
    @Html.HiddenFor(model => model.LineId)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Flag)
    <div class="content_Area">
        <div class="layui-form">
            <div class="layui-form-item">
                <label class="layui-form-label">终端ID</label>
                <div class="layui-input-block">
                    @Html.EditorFor(model => model.TerminalId, new { htmlAttributes = new { @class = "layui-input", @placeholder = "终端ID", @readonly = "readonly" } })
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">终端名称</label>
                <div class="layui-input-block">
                    @Html.EditorFor(model => model.DeviceName, new { htmlAttributes = new { @class = "layui-input", @placeholder = "终端名称", @readonly = "readonly" } })
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">告警值</label>
                <div class="layui-input-block">
                    @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "layui-input", @placeholder = "告警值", @readonly = "readonly" } })
                </div>
            </div>
            <div class="layui-form-item layui-form-text">
                <label class="layui-form-label">告警详情</label>
                <div class="layui-input-block">
                    @Html.TextAreaFor(model => model.Content, new { @class = "layui-textarea", @placeholder = "告警详情", @readonly = "readonly" })
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">供电或公司</label>
                <div class="layui-input-block">
                    @Html.EditorFor(model => model.ElectricName, new { htmlAttributes = new { @class = "layui-input", @placeholder = "供电或公司", @readonly = "readonly" } })
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">线路名称</label>
                <div class="layui-input-block">
                    @Html.EditorFor(model => model.LineName, new { htmlAttributes = new { @class = "layui-input", @placeholder = "线路名称", @readonly = "readonly" } })
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">接头名称</label>
                <div class="layui-input-block">
                    @Html.EditorFor(model => model.JointName, new { htmlAttributes = new { @class = "layui-input", @placeholder = "接头名称", @readonly = "readonly" } })
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">告警时间</label>
                <div class="layui-input-block">
                    @Html.EditorFor(model => model.CreateTime, new { htmlAttributes = new { @class = "layui-input", @placeholder = "告警时间", @readonly = "readonly" } })
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">结束时间</label>
                <div class="layui-input-block">
                    @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "layui-input", @placeholder = "结束时间", @readonly = "readonly" } })
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">告警状态</label>
                <div class="layui-input-block">
                    <input type="text" class="layui-input" id="flagName" readonly="readonly" />
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">处理状态</label>
                <div class="layui-input-block">
                    @Html.DropDownList("alarmStatus")
                </div>
            </div>
            <div class="layui-form-item layui-form-text">
                <label class="layui-form-label">处理原因</label>
                <div class="layui-input-block">
                    <textarea placeholder="请输入处理原因" class="layui-textarea" id="Cause"></textarea>
                </div>
            </div>
            <div class="layui-form-item layui-form-text">
                <label class="layui-form-label">处理内容</label>
                <div class="layui-input-block">
                    <textarea placeholder="请输入处理内容" class="layui-textarea" id="handContent"></textarea>
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">处理人员</label>
                <div class="layui-input-block">
                    <input type="text" placeholder="请输入处理人员名字" id="handUser" class="layui-input">
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">处理时间</label>
                <div class="layui-input-block">
                    <input type="text" placeholder="请选择处理时间" id="handEndTime" class="layui-input">
                </div>
            </div>
            <div class="layui-form-item">
                <div class="filePanel">
                    <span> 文件上传</span>
                    <div class="fileRow">
                        <button class="buttonUpload" id="btnUpload">选择文件上传</button>
                        <button class="buttonDel" id="btnDel">删除选中文件</button>
                    </div>
                    <div class="fileContent" id="fileContent">
                        <div class="fileContent">
                            <table id="fileTable" cellspacing="0" cellpadding="2" class="table">
                                <thead>
                                    <tr>
                                        <td>文件名</td>
                                        <td>类型</td>
                                        <td>大小</td>
                                        <td>状态</td>
                                        <td>&nbsp;</td>
                                    </tr>
                                </thead>
                                <tbody id="fileTableContent"></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="layui-form-item">
                <div class="layui-form-item">
                    <button class="layui-btn layui-btn-normal cl_Submit" onclick="ChangeStatusSubmit()">处理</button>
                    <button class="layui-btn layui-btn-primary" onclick="window.history.back()">返回</button>
                </div>
            </div>
        </div>
    </div>
    <script src="~/Scripts/tableDrag/tabledrag.js"></script>
    <script src="~/Scripts/layui/layui.js"></script>
    <script type="text/javascript">
        layui.use(['form','laydate'], function () {
            var form = layui.form;
            var laydate = layui.laydate;
            laydate.render({
                elem: '#handEndTime',
                type: 'datetime'
            });
        });

        $(document).ready(function () {
            var flagValue = $("#Flag").val();
            var flagName = flagValue == 0 ? "已恢复" : "告警中";
            $("#flagName").val(flagName);
        })

        function ChangeStatusSubmit() {
            var tbodyTr = document.getElementById("fileTableContent").children;
            var arrayId = new Array();
            for (var i = 0; i < tbodyTr.length; i++) {
                arrayId.push(tbodyTr[i].id);
            }

            var postData = { Id: $("#Id").val(), ElectricId: $("#ElectricId").val(), LineId: $("#LineId").val(), status: $("#alarmStatus option:selected").val(), endTime: $("#EndTime").val(), Cause: $("#Cause").val(), handContent: $("#handContent").val(), handUser: $("#handUser").val(), handEndTime: $("#handEndTime").val(), pictureId: arrayId };

            console.log(JSON.stringify(postData))
            var url = "/Alarm/AlarmHandle";
            $.ajax({
                url: url,
                type: 'post',
                data: postData,
                dataType: 'json',
                async: true,
                success: function (data, jqxhr, txtStatus) {
                    if (data.code == 0) {
                        layer.msg(data.msg);
                        setTimeout(function () { window.history.back() }, 1000);
                    }
                }, error: function (xhr, txtStatus) {
                    console.log(txtStatus);
                }
            })
        }


        // 初始化Web Uploader
        var uploader = WebUploader.create({

            // 选完文件后，是否自动上传。
            auto: true,

            // swf文件路径
            swf: '~/Scripts/webuploader-0.1.5/Uploader.swf',

            // 文件接收服务端。
            server: '/AlarmPictureHandler.ashx',

            // 选择文件的按钮。可选。
            // 内部根据当前运行是创建，可能是input元素，也可能是flash.
            pick: '#btnUpload',

            //最多上传3张图片
            fileNumLimit: 3,


            formData:{
                ElectricId: $("#ElectricId").val(),
                LineId: $("#LineId").val()
            },

            // 单个文件大小限制（单位：byte），这里限制为 100M
            fileSingleSizeLimit: 100 * 1024 * 1024,

            // 只允许选择图片文件。
            accept: {
                title: 'Images',
                extensions: 'gif,jpg,jpeg,bmp,png',
                mimeTypes: 'image/*'
            }
        });

        // 添加到上传队列
        uploader.on('fileQueued', function (file) {
            var html = "<tr id=" + file.id + " data-Id=" + file.id + " onDblClick='TronDblClick(this)'><td>" + file.name + "</td><td>" + file.ext + "</td><td>" + (file.size / 1024).toFixed(2) + "KB" + "</td><td>等待上传</td><td><img src='/Images/table/Icon/delete.png' onclick='delRow(this)' /></td></tr>";
            $("#fileTableContent").append(html);
        });

        uploader.on('uploadProgress', function (file, percentage) {

        });

        //上传成功
        uploader.on('uploadSuccess', function (file, response) {
            var tbodyTr = document.getElementById("fileTableContent").children;
            for (var i = 0; i < tbodyTr.length; i++) {
                if (tbodyTr[i].getAttribute('data-Id') == file.id) {
                    document.getElementById("fileTableContent").children[i].cells[3].innerText = "上传成功";
                }
            }
            document.getElementById(file.id).id = response.Id;
        });

        //上传异常
        uploader.on('uploadError', function (file) {
            var tbodyTr = document.getElementById("fileTableContent").children;
            for (var i = 0; i < tbodyTr.length; i++) {
                if (tbodyTr[i].getAttribute('data-Id') == file.id) {
                    document.getElementById("fileTableContent").children[i].cells[3].innerText = "上传出错";
                }
            }
        });

        // 不管上传成功还是失败，都会触发 uploadComplete 事件
        uploader.on('uploadComplete', function (file) {
            uploader.removeFile(file, true);
        });

        // 当开始上传流程时触发
        uploader.on('startUpload', function () {
            document.getElementById("btnDel").disabled = true;
        });

        // 当所有文件上传结束时触发
        uploader.on('uploadFinished', function () {
            document.getElementById("btnDel").disabled = false;
        });

        uploader.on('error', function (type, arg, file) {
            if (type === 'F_EXCEED_SIZE') {
                layer.alert('文件[' + file.name + ']大小超出限制值', { title: "提示" });
            }
            if (type === 'Q_TYPE_DENIED') {
                layer.alert('请选择图片文件上传!', { title: "提示" });
            }
            if (type === 'Q_EXCEED_NUM_LIMIT') {
                layer.alert('只能上传3张图片文件!', { title: "提示" });
            }
        });

        //删除选中
        document.getElementById("btnDel").addEventListener("click", function (e) {
            var domList = document.getElementsByClassName("trSelect");
            var tbody = document.getElementById("fileTableContent");
            layer.confirm('你确定要删除选中的' + domList.length + '个文件吗？', {
                btn: ['确定', '取消']
            }, function () {
                var arrayId = new Array();
                for (var i = 0; i < domList.length; i++) {
                    arrayId.push(domList[i].id);
                }
                for (var j = 0; j < arrayId.length; j++) {
                    var cell = document.getElementById(arrayId[j]);
                    if (cell != undefined) {
                        tbody.removeChild(cell);
                    }
                }
                layer.close(layer.index);
            }, function () {
            });
        });

        //单行删除
        function delRow(obj) {
            layer.confirm('你确定要删除这个文件吗？', {
                btn: ['确定', '取消']
            }, function () {
                obj.parentElement.parentElement.remove();
                layer.close(layer.index);
            }, function () {
            });
        }

        //双击选中
        function TronDblClick(obj) {
            $(obj).removeClass();
            $(obj).addClass("trSelect");
        }
    </script>
</body>
</html>
